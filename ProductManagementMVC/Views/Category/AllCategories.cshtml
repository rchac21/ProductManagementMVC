@model IEnumerable<ProductManagementMVC.Entities.Category>

@{
    ViewData["Title"] = "All Categories";
}

<div class="text-center">
    <h1 class="display-4">All Categories</h1>
</div>

<div class="container p-3">
    <div class="row pt-4">
        <div class="col-6">
            <h2 class="text-primary">Category List</h2>
        </div>
        <div class="col-6 text-end">
            @if (User.IsInRole("Admin"))
            {
                <a asp-controller="Category" asp-action="Create" class="btn btn-primary">
                    <i class="bi bi-plus-circle"></i> Create New Category
                </a>
            }
        </div>
    </div>

    <form asp-action="AllCategories" method="get">
        <div class="form-actions no-color">
            <p>
                <input type="text" name="SearchString" style="width: 650px; text-align:left"
                       value="@ViewData["CurrentFilter"]" />
                <input type="submit" value="Search" class="btn btn-outline-info" />
                <a asp-action="AllCategories" class="btn btn-secondary">Back To List</a>
            </p>
        </div>
    </form>

    <br /><br />

    <table class="table table-bordered table-striped" style="width:100%">
        <thead>
            <tr>
                <th>Category Name</th>
                <th>Category Code</th>
                <th>Category Description</th>
                @if (User.IsInRole("Admin"))
                {
                    <th></th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var obj in Model)
            {
                <tr>
                    <td width="50%">@obj.Name</td>
                    <td width="30%">@obj.Code</td>
                    <td width="30%">@obj.Description</td>
                    @if (User.IsInRole("Admin"))
                    {
                        <td>
                            <div class="w-75 btn-group" role="group">
                                <a asp-controller="Category" asp-action="Edit" asp-route-id="@obj.Id"
                                   class="btn btn-primary mx-2">
                                    <i class="bi bi-pencil-square"></i> Edit
                                </a>
                                <a asp-controller="Category" asp-action="Delete" asp-route-id="@obj.Id"
                                   class="btn btn-danger mx-2">
                                    <i class="bi bi-trash-fill"></i> Delete
                                </a>
                            </div>
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>

    <!-- Pagination -->
    <nav>
        <ul class="pagination justify-content-center">
            <li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link"
                   href="@Url.Action("AllCategories", new { pageNumber = ViewBag.CurrentPage - 1, searchString = ViewData["CurrentFilter"] })">
                    Previous
                </a>
            </li>

            @for (int i = 1; i <= ViewBag.TotalPages; i++)
            {
                <li class="page-item @(ViewBag.CurrentPage == i ? "active" : "")">
                    <a class="page-link"
                       href="@Url.Action("AllCategories", new { pageNumber = i, searchString = ViewData["CurrentFilter"] })">
                        @i
                    </a>
                </li>
            }

            <li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
                <a class="page-link"
                   href="@Url.Action("AllCategories", new { pageNumber = ViewBag.CurrentPage + 1, searchString = ViewData["CurrentFilter"] })">
                    Next
                </a>
            </li>
        </ul>
    </nav>
</div>
